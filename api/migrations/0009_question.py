# Generated by Django 5.2.7 on 2025-10-20 08:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0008_remove_subject_is_core_remove_subject_is_trade"),
    ]

    operations = [
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        help_text="Specific topic or unit this question covers",
                        max_length=200,
                        verbose_name="topic",
                    ),
                ),
                (
                    "question_text",
                    models.TextField(
                        help_text="The question text (supports HTML and LaTeX for math formulas)",
                        verbose_name="question text",
                    ),
                ),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("multiple_choice", "Multiple Choice"),
                            ("true_false", "True/False"),
                            ("essay", "Essay"),
                            ("fill_blank", "Fill in the Blank"),
                            ("short_answer", "Short Answer"),
                        ],
                        default="multiple_choice",
                        max_length=20,
                        verbose_name="question type",
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("medium", "Medium"),
                            ("hard", "Hard"),
                        ],
                        default="medium",
                        max_length=10,
                        verbose_name="difficulty level",
                    ),
                ),
                (
                    "option_a",
                    models.TextField(blank=True, null=True, verbose_name="option A"),
                ),
                (
                    "option_b",
                    models.TextField(blank=True, null=True, verbose_name="option B"),
                ),
                (
                    "option_c",
                    models.TextField(blank=True, null=True, verbose_name="option C"),
                ),
                (
                    "option_d",
                    models.TextField(blank=True, null=True, verbose_name="option D"),
                ),
                (
                    "option_e",
                    models.TextField(blank=True, null=True, verbose_name="option E"),
                ),
                (
                    "correct_answer",
                    models.TextField(
                        help_text="For multiple choice: A, B, C, D, or E. For true/false: True or False. For others: the complete answer",
                        verbose_name="correct answer",
                    ),
                ),
                (
                    "explanation",
                    models.TextField(
                        blank=True,
                        help_text="Explanation of the correct answer (supports HTML and LaTeX)",
                        null=True,
                        verbose_name="explanation",
                    ),
                ),
                (
                    "marks",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="Points awarded for correct answer",
                        verbose_name="marks",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the question has been reviewed and approved",
                        verbose_name="verified",
                    ),
                ),
                (
                    "usage_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of times this question has been used in exams",
                        verbose_name="usage count",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_questions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="api.subject",
                        verbose_name="subject",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question",
                "verbose_name_plural": "Questions",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["subject", "topic"],
                        name="api_questio_subject_65efa2_idx",
                    ),
                    models.Index(
                        fields=["difficulty"], name="api_questio_difficu_b6056a_idx"
                    ),
                    models.Index(
                        fields=["question_type"], name="api_questio_questio_ac5f03_idx"
                    ),
                ],
            },
        ),
    ]
